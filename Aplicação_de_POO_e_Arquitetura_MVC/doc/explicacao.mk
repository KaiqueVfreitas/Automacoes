# üìò Documenta√ß√£o do Projeto

Este documento apresenta uma vis√£o geral do projeto, explicando sua arquitetura, funcionamento, bibliotecas utilizadas, e instru√ß√µes de uso. O objetivo √© fornecer uma base clara e detalhada para entender como o sistema foi desenvolvido e como ele deve ser utilizado.

---

## üóÇÔ∏è Estrutura do Projeto

O projeto est√° organizado em tr√™s diret√≥rios principais, cada um com uma fun√ß√£o espec√≠fica:

### 1. **`doc/`**
- **Descri√ß√£o:** Diret√≥rio destinado a toda a documenta√ß√£o do projeto.
- **Conte√∫do:** 
  - Diagramas de casos de uso.
  - Modelos conceituais de banco de dados.
  - Manuais de instru√ß√£o e guias de uso do sistema.
  - Explica√ß√µes sobre o funcionamento do c√≥digo.
- **Objetivo:** Centralizar as informa√ß√µes que apoiam o entendimento e a manuten√ß√£o do projeto.

### 2. **`src/`**
- **Descri√ß√£o:** Diret√≥rio que cont√©m todo o c√≥digo-fonte do sistema.
- **Conte√∫do:**
  - **`controllers/`**: Gerencia a transi√ß√£o entre a camada de dados (Model) e a interface de usu√°rio (View).
  - **`models/`**: Respons√°vel pelo gerenciamento do banco de dados e modelagem das informa√ß√µes.
  - **`views/`**: Gerencia as intera√ß√µes com o usu√°rio, exibindo informa√ß√µes e capturando entradas.
- **Objetivo:** Centralizar toda a l√≥gica do sistema, com uma estrutura modular baseada na Arquitetura MVC.

### 3. **`test/`**
- **Descri√ß√£o:** Diret√≥rio usado para desenvolvimento orientado a testes (TDD).
- **Conte√∫do:**
  - C√≥pias controladas das fun√ß√µes do projeto para validar altera√ß√µes e melhorias.
  - Testes automatizados utilizando a biblioteca Pytest.
- **Objetivo:** Garantir a qualidade do c√≥digo e a estabilidade do sistema ao implementar novas funcionalidades ou corrigir bugs.

---

## üèóÔ∏è Arquitetura do Projeto

O projeto foi desenvolvido seguindo a **Arquitetura MVC (Model-View-Controller)**, uma abordagem amplamente utilizada para garantir organiza√ß√£o, escalabilidade e separa√ß√£o de responsabilidades. 

### Pap√©is de Cada Camada:
1. **Model**:
   - Gerencia o acesso e manipula√ß√£o dos dados no banco de dados.
   - Modelagem de dados para cadastro de pessoas (nome, sobrenome, idade, CPF).
   
2. **Controller**:
   - Atua como intermedi√°rio entre o Model e a View.
   - Controla a l√≥gica do sistema e oferece m√©todos para listar e salvar pessoas no banco de dados.

3. **View**:
   - Gerencia a intera√ß√£o com o usu√°rio.
   - Inclui um loop principal que chama os m√©todos das camadas Controller e Model, exibindo informa√ß√µes e recebendo entradas.

Essa arquitetura foi escolhida para:
- Separar responsabilidades, tornando o c√≥digo mais organizado e f√°cil de manter.
- Facilitar a reutiliza√ß√£o de componentes e a expans√£o do sistema.
- Seguir boas pr√°ticas amplamente adotadas em projetos de software.

---

## üîß Bibliotecas Utilizadas

O projeto faz uso das seguintes bibliotecas:
- **Python 3:** Linguagem principal para o desenvolvimento.
- **Pytest:** Biblioteca para realiza√ß√£o de testes automatizados. Foi utilizada para garantir o correto funcionamento das fun√ß√µes, como a concatena√ß√£o de nome e sobrenome.
  
Para instalar as depend√™ncias necess√°rias, utilize o comando:
```bash
pip install -r requirements.txt
